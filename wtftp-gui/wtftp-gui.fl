# data file for the Fltk User Interface Designer (fluid)
version 1.0305
header_name {.h}
code_name {.cxx}
decl {\#include <iostream>} {public global
}

decl {\#include <string>} {public global
}

decl {\#include <pcap.h>} {public global
}

decl {extern "C" int wtftp_init(const char *);} {public global
}

decl {extern "C" int wtftp_send_ping();} {public global
}

decl {extern "C" int wtftp_send_text(const char *);} {public global
}

decl {Fl_Text_Buffer *buff = new Fl_Text_Buffer();} {private global
}

Function {make_window()} {open
} {
  Fl_Window wtftp_window {
    label {wtftp-gui}
    callback callback_window_closing open
    xywh {5 592 285 205} type Double visible
  } {
    Fl_Input user_input {
      xywh {5 175 210 25}
    }
    Fl_Button {} {
      label send
      callback callback_button
      xywh {220 175 60 25}
    }
    Fl_Text_Display text_display {
      xywh {5 5 275 165}
      code0 {text_display->buffer(buff);}
    }
  }
}

Function {callback_button( Fl_Widget* widg, void* userdata )} {open return_type {static void}
} {
  code {char const * input = user_input->value();

//initialize
if (wtftp_init("wlp0s19f2u4") == -1) // TODO: provide user input for interface
{
	std::cerr << "error occurred\\n";
	return;
}

//send ping to the world
wtftp_send_ping();

//send out text from input
std::string text = input;
text = text + "\\n";

std::cout << "wtftp_send_text(" + text + ")\\n";
wtftp_send_text(text.c_str());

buff->append(text.c_str());} {}
}

Function {callback_window_closing( Fl_Widget* widg, void* userdata )} {open return_type {static void}
} {
  code {std::cout << "Exiting the program\\n"; 
wtftp_window->hide();} {}
}

Function {} {open
} {
  code {Fl_Window* win = make_window();
win->show();} {}
}
