// generated by Fast Light User Interface Designer (fluid) version 1.0305

#include "wtftp-gui.h"
Fl_Text_Buffer *buff = new Fl_Text_Buffer(); 

Fl_Double_Window *wtftp_window=(Fl_Double_Window *)0;

Fl_Input *user_input=(Fl_Input *)0;

Fl_Text_Display *text_display=(Fl_Text_Display *)0;

Fl_Double_Window* make_window() {
  { wtftp_window = new Fl_Double_Window(285, 205, "wtftp-gui");
    wtftp_window->callback((Fl_Callback*)callback_window_closing);
    { user_input = new Fl_Input(5, 175, 210, 25);
    } // Fl_Input* user_input
    { Fl_Button* o = new Fl_Button(220, 175, 60, 25, "send");
      o->callback((Fl_Callback*)callback_button);
    } // Fl_Button* o
    { text_display = new Fl_Text_Display(5, 5, 275, 165);
      text_display->buffer(buff);
    } // Fl_Text_Display* text_display
    wtftp_window->end();
  } // Fl_Double_Window* wtftp_window
  return wtftp_window;
}

void callback_button( Fl_Widget* widg, void* userdata ) {
  char const * input = user_input->value();
  
  //initialize
  if (wtftp_init("wlp0s19f2u4") == -1) // TODO: provide user input for interface
  {
  	std::cerr << "error occurred\n";
  	return;
  }
  
  //send ping to the world
  wtftp_send_ping();
  
  //send out text from input
  std::string text = input;
  text = text + "\n";
  
  std::cout << "wtftp_send_text(" + text + ")\n";
  wtftp_send_text(text.c_str());
  
  buff->append(text.c_str());
}

void callback_window_closing( Fl_Widget* widg, void* userdata ) {
  std::cout << "Exiting the program\n"; 
  wtftp_window->hide();
}

int main(int argc, char **argv) {
  Fl_Window* win = make_window();
  win->show();
  return Fl::run();
}
